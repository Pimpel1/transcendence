input {
  tcp {
    port => 5044
    codec => json
    ssl_enable => true
    ssl_cert => "/usr/share/logstash/config/logstash.crt"
    ssl_key => "/usr/share/logstash/config/logstash.key"
    ssl_verify => false
  }
}

filter {
  ruby {
    code => "
      event.set('received_from', event.get('sender') || event.get('@host'))
    "
  }
  mutate {
    add_field => { "received_at" => "%{@timestamp}" }
    remove_field => ["@version", "host", "sender"]
  }
  if [received_from] == "game-service" {
    if [message] =~ /player connected to game \(ID: / {
      mutate {
        add_field => { "event_type" => "connected_to_game_service" }
      }
    }
  }
  if [received_from] == "matchmaker-service" {
    if [message] =~ /Player connected \(Name: / {
      mutate {
        add_field => { "event_type" => "connected_to_matchmaker_service" }
      }
    }
  }
  if [received_from] == "auth-service" {
    if [loglevel] == "DEBUG" and [message] =~ /POST \/api\/validate-jwt\// {
      mutate {
        add_field => { "event_type" => "jwt_validation_attempt" }
      }
    } else if ([loglevel] in ["ERROR", "WARNING"] and [message] =~ /api\/validate-jwt/) {
      mutate {
        add_field => { "event_type" => "jwt_validation_fail" }
      }
    }
  }
}

output {
  elasticsearch {
    hosts => ["https://elasticsearch:9200"]
    index => "logstash-%{+YYYY.MM.dd}"
    user => "elastic"
    password => "${ELASTIC_PASSWORD}"
    ssl => true
    cacert => "/usr/share/logstash/config/elasticsearch.crt"
  }
  stdout { codec => rubydebug }
}
